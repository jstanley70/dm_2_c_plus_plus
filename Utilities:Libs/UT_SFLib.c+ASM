#include	"SF_MathLib.h"double	StructureFactor(h,k,l,theUs,theVs,theWs,num,theZs)double	h,k,l,*theUs,*theVs,*theWs,*theZs;long	num;{	double	a,b,c,d,e,*u,*v,*w;	long	i,j;	double	realPart,imagPart,twoPi,total;		u = theUs;	v = theVs;	w = theWs;	j = num;	realPart = imagPart = 0.0;	twoPi = 6.28318530717958648;	asm{		MOVEA.L		theZs,A1		FMOVE.X		h,fp0		FMOVE.X		twoPi,twoPi		}	for(i = 1 ; i <= j ; i++){		/* asm{			FMOVE.X		(u),fp7				FMUL		fp0,fp7				; h * u -> fp7 */					fp7 = *theUs * h;								/*	FMOVE.X		(v),fp6					FMOVE.X		k,fp5			FMUL		fp5,fp6				; k * v -> fp6  */		fp6 = *theVs * k;					/*	FMOVE.X		(w),fp4			FADD		fp6,fp7				; (h * u) + (k * v) ->fp7			FMOVE.X		l,fp0					FMUL		fp0,fp4				; l * w -> fp4 */		fp7 = fp7 + fp6;		fp4	= *theWs * l;					/*	LEA			0x000C(u),u			; u++ */		theUs++;				/*	FADD		fp4,fp7				; (l * w) + ((h * u) + (k * v)) -> fp7			FMUL		twoPi,fp7			; 2¹ * ((l * w) + (k * v) + (h * u)) -> fp7 */		fp7 = fp7 + fp6;		fp7 *= twoPi;		/*	LEA			0x000C(v),v			; v++ */		theVs++;					/*	FSINCOS.X	fp7,fp5:fp6			; sin(fp7) -> fp6 cos(fp7) -> fp5 */				fp5 = cos(fp7);		fp6 = sin(fp7);					/*	FMOVE.X		(A1),fp4			; Z -> fp4 */		/*	FMOVE.X		imagPart,fp0			FMOVE.X		realPart,twoPi */		twoPi = realPart;		/*	FMUL		fp4,fp6				; Z * sin(Angle) */		fp6 *= *theZs;		/*	FADD		fp0,fp6				; imagPart + (z * sin(Angle)) -> fp6 */		fp6 = imagPart + fp6;					/*	LEA			0x000C(w),w			; w++ */			theWs++;		/*	FMUL		fp4,fp5				; Z * cos(Angle) */		fp5 *= *theZs;		/*	LEA			0x000C(A1),A1		; theZs++ */		theZs++;		/*	FMOVE.X		fp6,imagPart */		imagPart = fp6;		/*	FADD		twoPi,fp5				; realPart +  (z * cos(Angle)) -> fp5 */		fp5 = realPart + fp5;		/*	FMOVE.X		h,fp0		*/		/*	FMOVE.X		fp5,realPart */		realPart = fp5;	/*	}		*/	}		total = sqrt(imagPart * imagPart + realPart * realPart);	return(total);}