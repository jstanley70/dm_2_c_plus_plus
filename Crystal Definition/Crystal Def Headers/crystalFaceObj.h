//crystalFaceObj.h#ifndef _DEFCRYSTALFACE#define _DEFCRYSTALFACE#include 	"a_Crystal.h"#include	"PopUpMenu.h"enum{		DELETE_CF = 6,	ADD,	HKLINPUT,	PERMUTATION,	LIBRARY,	The_SCROLL_RECT,	THE_LIST_RECT_CF,	ADD_LIBRARY,	LIBRARY_PICT,	ROTATEXYPLUS,	ROTATEXYNEG,	ROTATEZYPLUS,	ROTATEZYNEG,	REDRAW_FACES};enum{	HPUSH = 1,	LENGTHPUSH};void DoBoxes(DialogPtr theDialog);void DoListBoxes(DialogPtr theDialog);class PutCrystalFaceObj{public:	short			maxFaces;	CrystalFace		*theFaces;	DialogPtr		theDialog;	DialogPtr		oldPort;	Index			*theIndex;	short			activeRow;	short			face_Count;	Cell			gTheCell;	ListHandle		theFaceList;	Crystal			*oldCrystal;	Crystal			*crystalToSet;	void			Permutate(void);	void			Kill(void);	void			Init(Crystal *crystalObjOld);	void			DeleteFace(void);	void			EnterHKL(void);	void			AddFace(void);	void			InitFaceList(void);	void			ListFaces(void);	void			ListFace(void);	void			InitFaces(Crystal *crystalObj);	void			SetTheHKLText(void);	void			CorrectList(short hor);	void			HandleListRect(void);	void			DoCopy(Crystal *crystalObjOld);	void			DoLibrary(void);	void 			AddResourceToLibrary(PopUpMenu *theCrystalFaceList);	Boolean 	GetShapeName(char *theText);	Boolean 	DoHit(/*DialogPtr theDialog,*/Ptr thePtr,short theSelect,Boolean *saveData);	void 	DoRead(Ptr owner,Ptr thePtr,Boolean saveData);	void		DoSetUp(Ptr owner,Ptr thePtr);};#endif