//a_Lat_Image_Vector.h#ifndef _IMAGEVECTOR#define _IMAGEVECTOR	#ifndef _LATTICEVECTOR		#define _LATTICEVECTOR		typedef struct	latticeVector{				double		x;				double		y;				double		z;				double		length;			}latticeVector,*latticeVectorPtr,**latticeVectorHandle;	#endif						class	ImageVector{	public:		double				x1;		double				y1;		double				z1;		double				length1;		double				x2;		double				y2;		double				z2;		double				length2;		double				scaling;		Boolean				labelFlag;		char				label[2];		Point				imageCenter;		ImageVector*		nextObj;		void				DoInit(latticeVectorPtr, latticeVectorPtr, unsigned char*);		void				InitNext(latticeVectorPtr, latticeVectorPtr, unsigned char*);		void				DoClose(void);		void				DoRotate(double[][3]);		Boolean				SortByZ(ImageVector** previous);		void				DoDraw(lattice* theAtoms);		void				SetCenter(Point);		void				SetScaling(double);		void				OffsetPoints(latticeVectorPtr);		void				DoFileRead(void);		void				DoFileWrite(void);		void				InitAll(short count,short total);		void				InsertCrystalMorphology(CrystalVerticePtr theVPtr,CrystalEdgePtr theEPtr,short count);		void				GetCellCenter(latticeVectorPtr  cellCenter1,latticeVectorPtr  cellCenter2);		void				GetAverageLength(double *x, double *y, double *z,short count);		void				ShiftImageVectors(double x,double y,double z);		void				GetLowestPoint(double *x, double *y, double *z);		void				GetUnitCellVectors(double x, double y, double z,Index *theIndex[3],short count);			};#endif