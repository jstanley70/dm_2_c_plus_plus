//m:GraphicsObj:GraphicsObj Headers:LineObj.h#ifndef _LINEOBJ#define _LINEOBJ #define SEGMENT_DIALOG 334class LineObj{public:	Crystal			*theCrystal;	short			h;	short			k;	short			l;	Boolean		direction;	float			x;	float			y;	float			z;	float			intensity;	float			angle;	short  		hor1;	short			ver1;	short  		hor2;	short			ver2;	long			flags;	Boolean		selected;	LineObj		*next;	LineObj		*previous;	Boolean		pinned;	short			segments;	void DoInit(Boolean dirFlag,Crystal *aCrystal,Boolean lineType,long options,Point thePoint,Point nextPoint);	void				CopyLineToPtr(Ptr thePtr);	void				CopyPtrToLine(Ptr thePtr);	void				DoCopy(LineObj *theLine);	double			Slope(Boolean *flag);	Boolean 		PointOnLine(Point thePoint);	Boolean			ManipulateLine(Point thePoint);	void				SetLine(Point thePoint,Point lastPoint);	void				DrawLine(Boolean rectFlag);	double			GetLength(void);	void				DoClose(void);	double 		Angle(void);	double			AngleBetween(LineObj *theLine);	double			AvgPixelsBetween(LineObj *theLine);	void 				SetCrystal(Crystal *aCrystal);	Boolean	HitLine(Point thePoint);	void				ClearFlag(long theMask);	void				SetFlag(long theMask);	void				SetORFlag(short oRNum);	long 				MaskValue(long theMask);	void 				SetLineToRect(Rect theRect);	Point 			CrossOver(LineObj *line2);	void  KillAll(void);	Boolean TakeCareOfLines(Point thePoint,Point lastPoint,short maxLines,  short *hitLine);	void AddLine(Point thePoint,Point nextPoint);	short NumberOfLines(short count);	void DeSelectAll(void);	void SetSegments(void);	void SetMagnification(void);	Vector GetVector(void);	void		DrawAllLines(Boolean rectFlag);	void MoveBy(Point delPoint);	void MoveAllBy(Point delPoint);	LineObj*  GetFirst(void);	LineObj*	GetLast(void);	void  AverageHV(double *theH,double *theV,double n);	LineObj* GetLineNum(short n,short number);	void  MidPoint(short *theH,short *theV);	void 	JustDrawAllLines(Boolean rectFlag);};#endif