//s.Jim:E_Diffract:E_Diffract Headers:ERingObj.h#ifndef _ERINGOBJ#define _ERINGOBJ#include	"DiffractometerObj.h"#define		EBEAM_DEFINE   340#define		EBEAM_INFO	   341#pragma def_inherited onclass ERingObj:public DiffractometerObj{		public:			Boolean					fullCircle;						double		minX;						double		maxX;/*in Base*/	void			DoPictDraw(void);/*SAD OBJ*/	void			SetObjectWindowTitle(void);/*in Base*/	void			SetObjectMenu(void);/*Dftomtr*/	void			SetPlotScales(void);/*Dftomtr*/	double 			SetRecpSize(void);/*Dftomtr*/	void 			SetDLogNames(DialogPtr theDialog);/*Dftomtr*/	Boolean			DialogRead(DialogPtr theDialog);			virtual void 	DrawSpot(Rect *theRect);/*Spot*/	Boolean 		FindSpot(Point thePoint);/*Spot*/	void			LabelSpot(void);/*in Base*/	void 			DrawTheText(void);/*in Base*/	void 			DoClose(void);/*in Base*/	void 			DoMenu(long theResult);/*in Base*/	void			MyCalculate(void);/*SAD OBJ*/	void 			MoveReconfigureSpot(Point thePoint);/*SAD OBJ*/	void			AddSpotSimple(Point thePoint);/*Spot*/	void			DeleteSpot(void);/*SAD OBJ*/	Point 			MovePatternCenter(Point thePoint);/*in Base*/	void 			DoAuxRead(void);/*in Base*/	void 			DoAuxWrite(void);/*Dftomtr*/	void			DoCourser(Point thePoint);						void 			InitializeGraph(void); //Override						void			CalcFullSimulation(double hMaxAvg);						double		GetMinMax(DialogPtr theDialog);						void			SetDialogValues(DialogPtr theDialog,double *minXX,double *maxXX);						void			ResizeGraphBox(void);						Boolean		LabelAllLines(Boolean label);};#endif