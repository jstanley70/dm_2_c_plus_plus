//ces.Jim:E_Diffract:E_Diffract Headers:HOLZObj.h#ifndef _HOLZ#define _HOLZ#define 	DISTORTION 		130#define 	HOLZDEFMENU 	310#define 	HOLZINFOMENU 	311#define 	HOLZEXP 		330#define 	HOLZDEFINE_OBJ 	340#define		DELETE_LINE		6#define		MOVE_HOLZ_MENU	9#pragma def_inherited onclass HOLZObj:public SADObj{		public:			short					lowOrder;			short					highOrder;			MenuHandle 		theDistortMenu;			float					delVoltage;			UnitCell			deltaCell;						SpotInfoHandle	deltaData;			short						theDeltaItem;			Boolean					curvedLines;			Boolean					approximateFlag;			Boolean					adjustEnergy;			GWorldPtr				centerW;			double					zeroIntensity;			double					gamma;						/*SAD OBJ*/	void			SetObjectWindowTitle(void);/*in Base*/	void 			SetObjectMenu		(void);/*in Base*/	void			DoInit				();/*SAD OBJ*/	void  			DoDefine			(void);			void 			DeltaCalculate		(void);			void 			DrawDeltaPict		(void);/*in Base*/	void 			DoClose				(void);/*in Base*/	void			DoMenu				(long theResult);/*Spot*/	Boolean			FindSpot			(Point thePoint);/*in Base*/	void			DrawTheText			(void);/*Spot*/	void			LabelSpot			(void);/*in Base*/	void			MyCalculate			(void);/*in Base*/	void 			DoPictDraw			(void);			void			DeltasByKey			(char  theChar);/*in Base*/	void			DoKey				(char  theChar);			void			SetDeltaUnitCell	(Point thePoint);/*in Base*/	Boolean			DoContent			(Point thePoint);/*SAD OBJ*/	Point 			MovePatternCenter	(Point thePoint);/*Spot*/	void 			HilightDataPoint	(SpotInfoPtr theSpot);/*Spot*/	void			DeleteSpot			(void);			void 			DrawStraight		(SpotInfoPtr thisLine,short centerDisk);			void 			DrawCurved(SpotInfoPtr thisLine);/*in Base*/	void 			DoAuxRead(void);/*in Base*/	void 			DoAuxWrite(void);/*SAD OBJ*/	float			RotateSpotsAroundZ(Point thePoint);	/*SAD OBJ*/ void  	SetDefineObj(DialogPtr theDialog);	/*SAD OBJ*/ void		ReadDefineDialog(DialogPtr theDialog,Boolean saveData);	/*SAD OBJ*/ Boolean	DefineSwitch(DialogPtr theDialog,short theSelect,Boolean *saveData);	void 		 	DoDefineSetUp(void);	void 			DoIdle(void);	virtual  Boolean		LabelAllLines(Boolean label);};#endif