#ifndef _PHASED	#define _PHASED	#define	PHASE_D_MENU	2504#pragma def_inherited onenum {	PD_RE_SIZE = 1,		PD_PLOT_WEIGHT = 3,		PD_HIDE_TEXT,		PD_ZOOM_IN = 5,		PD_ZOOM_OUT,		PD_OPEN_LIB = 8,		PD_OPEN_DB	};									typedef struct	RezBezierCurve{				short			curveType;				short			curveWeight;				short double		x[4];				short double		t[4];			}RezBezierCurve,*RezBezierCurvePtr,**RezBezierCurveHandle;		typedef struct	BezierCurve{				short			curveType;				short			curveWeight;				short double	x[4];				short double	t[4];			}BezierCurve,*BezierCurvePtr,**BezierCurveHandle;								typedef struct	Label{				short double			x;				short double			t;				Boolean			vertical;				char			theLabel[40];				} Label,*LabelPtr,**LabelHandle;				typedef	struct	DGramLabel{					float			x;					float			t;					short			width;					short			height;					short			length;				}DGramLabel,*DGramLabelPtr,**DGramLabelHandle;				typedef	struct	DiagramRes{					Rect			theFrame;					char			elementA[4];					char			elementB[4];					Boolean			weightLinear;					short double		massRatio;					short double		tempLo;					short double		tempHi;					short double		tempStep;					short double		tempRatio;						short			numCurves;						short			numLabels;							short			type;					short			spares[10];					long			data;				}DiagramRes,*DiagramResPtr,**DiagramResHandle;	typedef	struct SnapPoint{					short			h;					short			v;					float			comp;					float			temp;				}SnapPoint,*SnapPointPtr;						typedef	struct PDFileInfo{						FSSpec			theFilesSpecs[1500];					short			dgramArray[107][107];					}PDFileInfo,*PDFileInfoPtr;			class	SnapInfo{public:		SnapPoint			snapPoints[300];		short				numrecs;		void				DoInit(void);		void				SetPoint(short h,short v,short double x,short double t);		Boolean				SnapTemp(short h,short v,short double *temp);		Boolean				SnapComp(short h,short v,short double *comp);		void				DoClose(void);	};						class	PhaseDiagram:public DiffractObject{public:			Rect				tempControl;			Rect				compControl;			Rect				loComp;			Rect				hiComp;			Rect				theFrame;			FSSpec				thePDFileSpec;			char				elementA[4];			char				elementB[4];			Boolean				weightLinear;			Boolean				hideLabels;			short double				massA;			short double				massB;			short double				massRatio;			short double				tempLo;			short double				tempHi;			short double				tempStep;			short double				tempRatio;				short				resFileID;			short				resID;			short				numCurves;				short				numLabels;			BezierCurve			theCurves[100];			Label				theLabels[100];			SnapInfo*			theSnapInfo;			BezierCurvePtr		workCurve;			/*in Base*/	void				DoInit(void);/*in Base*/	void				DoDefine(void);/*in Base*/	void				DoClose(void);/*in Base*/	void				DoMenu(long);/*in Base*/	Boolean				DoContent(Point);/*in Base*/	void				DoIdle(void);			void				DoNewSize(void);/*in Base*/	void				DoPictDraw(void);//(Boolean	eraseFlag);			Point				FromDgram(short double x,short double temp);			void				ToDgram(Point thePoint,short double *x,short double *temp);				void 				DrawCurve(void);			void				DrawAtScale(void);			void				DrawWtScale(void);			void				DrawTempScale(void);						void				DisplayTheText(void);			void				DrawBezier(BezierCurvePtr theCurve);			void				ReadDiagram(void);/*in Base*/	void				DoRefresh(void);			void				DrawTempControl(Boolean hilite);			void				DrawCompControl(Boolean hilite);			void				SearchCurves(short double comp,short double temp,short double*a,short double *b);			void				DrawCompSpots(Boolean refresh);			void				ConvertToWeight(void);/*in Base*/	void				SetObjectMenu(void);			void				SetObjectWindowTitle(void);			void 				FinishMenuSetUp(void);			void				ResetBackgroundColor(void);/*in Base*/	void				DoPrint(void);/*in Base*/	void				FastPictDraw(void);void ListOrientation(void);void UpdateOR(short axis);void DoARotation(double angle,short axis);	};	void			DrawTheString		(char*	line, short h, short v,Boolean vertical);void			DrawVertChar		(FontRec	**theFont,char theChar);char			CharConvert			(unsigned char theChar);double			GetCompFromCurve(BezierCurvePtr theCurve,short double	comp,shortdouble	temp);double			GetCurveValue(BezierCurvePtr theCurve,short double	u,short double *x);void			DrawArrow			(Point	thePoint);void			FindElementRect		(Rect* baseRect,short atNum);void			MarkElement			(Rect baseRect,short atNum,short func);short			GetAtNum			(Rect baseRect,Point thePoint);double			GetAtWeight			(short atNum);FontRec**		GetFontHandle		(unsigned char* fontName,short size);void			MemFlash			(void);PDFileInfoPtr	FileSearch			(void);short			GetTheAtomicNum		(char	*theText);void			FastPictDraw		(void);#endif