//cts:D.M. v2.0:Sources.Jim:X-Ray Diffract:X-Ray Diffract Headers:DiffractometerObj.h#ifndef _DIFFRACTOMETEROBJ#define _DIFFRACTOMETEROBJ#define DIFDEFINE 			321#define DIFINFO 			322#define DIFSEARCH 			304#define DIFEXPINFO 			325#define DIFMET_DEFINE_OBJ 	304#pragma def_inherited on#include	"GraphSpots.h"enum{	LABEL_SPOT_D = 1,	SHOW_INFO_D,	CONVERT_TO_TEXT_D = 4,	RESIZE_GRAPH = 6,	ZOOM_FUNCTION	};class DiffractometerObj:public SADObj{public:							Rect			graphBox;			Rect			theCourserRect;			GraphFunction	*currentGraph;			double			slitSize;			double			stepSize;			double			dwellTime;			double			minX;			double			maxX;			Boolean			autoScale;			Boolean			fullSim;/*in Base*/	void			DoPictDraw		(void);/*in Base*/	void			DoInit			(void);/*SAD OBJ*/	void			SetObjectWindowTitle(void);/*in Base*/	void			MyCalculate		(void);			Boolean			OverlapSpotExists(double theDist,double intens,short h,short k,short l,Crystal *aCrystal,dcomplex sF);/*in Base*/	Boolean			DoContent		(Point thePoint);			virtual void 	DoCourser		(Point thePoint);/*in Base*/	void			DoIdle			(void);/*in Base*/	void			DoMenu			(long theResult);/*in Base*/	void			DoDblClick		(Point thePoint);/*in Base*/	void			SetObjectMenu	(void);/*SAD OBJ*/	void 			DoDefine		(void);			virtual double 	SetRecpSize		(void);			virtual void 	SetDLogNames	(DialogPtr theDialog);			virtual 		Boolean	DialogRead		(DialogPtr theDialog);/*in Base*/	void 			DoClose			(void);			void			CreateCompositeSpots(void);/*in Base*/	void			DoAuxRead(void);/*in Base*/	void			DoAuxWrite(void);			PicHandle		SetPrintPicture(void);/*in Base*/	void			DoPrint(void);			virtual void			ResizeGraphBox(void);			void			OpenGeneral(void);			void			GraphValues(Point thePoint,double *angle,double *dspace,double *intensity);			virtual void			CalcFullSimulation(double hMaxAvg);			void			UpdateGraph(short theItem,GraphFunction *newGraph);			void			InitializeGraph(void);	void DrawTheText(void); //Override		virtual double	GetMinMax(DialogPtr theDialog);	virtual void	SetDialogValues(DialogPtr theDialog,double *minXX,double *maxXX);Boolean	DefineSwitch(DialogPtr theDialog,short theSelect,Boolean *saveData);void  	SetDefineObj(DialogPtr theDialog);void		ReadDefineDialog(DialogPtr theDialog,Boolean saveData);void		DoSetUp(void);void 		DoARotation(double angle,short axis);	void  ConvertToTextTable(void); //Override	PicHandle	SetInfoPict(void);};#endif