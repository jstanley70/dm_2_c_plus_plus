/*CancelMatrixRotation(double matrix3);					TransFormVector(&x,&y,&z,matrix3);					Identity_Matrix(matrix3);					matrix3[0][0] = cos(rotTiltToVer * PI / 180);					matrix3[0][1] = -sin(rotTiltToVer * PI / 180);					matrix3[1][0] = sin(rotTiltToVer * PI / 180);					matrix3[1][1] = cos(rotTiltToVer * PI / 180);																				Identity_Matrix(matrix);					matrix[1][1] = cos((tilt) * PI / 180);					matrix[1][2] = -sin((tilt)  * PI / 180);					matrix[2][1] = sin((tilt)  * PI / 180);					matrix[2][2] = cos((tilt)  * PI / 180);					InvertMatrix(matrix);										Identity_Matrix(matrix1);					matrix1[1][1] = cos((azimuth) * PI / 180);					matrix1[1][2] = -sin((azimuth)  * PI / 180);					matrix1[2][1] = sin((azimuth)  * PI / 180);					matrix1[2][2] = cos((azimuth)  * PI / 180);					InvertMatrix(matrix1);										Identity_Matrix(matrix2);					matrix2[0][0] = cos(rotAzimToVer * PI / 180);					matrix2[0][1] = -sin(rotAzimToVer * PI / 180);					matrix2[1][0] = sin(rotAzimToVer * PI / 180);					matrix2[1][1] = cos(rotAzimToVer * PI / 180);										InvertMatrix(matrix2);					TransFormVector(&x,&y,&z,matrix2);										TransFormVector(&x,&y,&z,matrix1);										InvertMatrix(matrix2);					TransFormVector(&x,&y,&z,matrix2);										InvertMatrix(matrix3);					TransFormVector(&x,&y,&z,matrix3);					TransFormVector(&x,&y,&z,matrix);					InvertMatrix(matrix3);					TransFormVector(&x,&y,&z,matrix3);					NormalizeVector(&x,&y,&z);																				mu = asin(x);					lambda = asin(y / cos(mu));					x = mu * cos((rotTiltToVer * PI / 180)) + lambda * sin((rotTiltToVer * PI / 180));					y = mu * cos((rotAzimToVer * PI / 180)) + lambda * sin((rotAzimToVer * PI / 180));										mu 		= x;					lambda 	= y;					mu *= (180. / PI);					lambda *= (180. / PI);					SetItemValue( theDialog,3,lambda,3);					SetItemValue( theDialog,4,mu,3);					*/