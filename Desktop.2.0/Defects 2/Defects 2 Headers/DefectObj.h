//Macintosh HD:CodeWarriorª DR/3 Gold Ä:Metrowerks  C/C++ Ä:Projects:D.M. v2.0:Sources.Jim:Desktop.2.0:Defects 2:Defects 2 Headers:DefectObj.h#ifndef _DEFECT_OBJ#define _DEFECT_OBJ#include 	"OneDisObj.h" class	DefectObj{	public:	Crystal			*theCrystal;	DislocIndex		*displacement;	DislocIndex		*direction;	Vector			locationStart;	Vector			locationEnd;	DefectObj		*nextDefect;	Handle			theDataHandle;	short			xCount;	short			yCount;	double			cos_Cry_Dis[3][3];	double			dis_Elastic_Const[6][6];	double 		p_Real[3];	double			p_Image[3];	double			H[3][3];	double			AI[3][3];	double			AR[3][3];	double			eMReal[3][3];	double			eMImage[3][3];	double			summedMHbImage[3][3];	double			summedMHbReal[3][3];	double			energy;	short			KRASH;	double			eRROR;	double			Q;	double			D[9];	double			ANO;	double			ZR;	double			ZI;	double			C44;	short			nEW;		double 	 	Q1;	double			Q2;	double			Q3;	double			Q4;	double			Q6;	double			Q15;	double			YT[8];	double			DT[8][3];		short 			NP[3];	short 			NQ[3];	short 			MM[3];	short 			NN[3];	short 			L1[6];	short 			L2[6];	short 	L3[3][3];	void			Draw(void);	void			Move(void);	void			CalculateDisplacement(double *x,double *y,double *z);	void			Init(Crystal *aCrystal);	void			DoDefine(void);	void			DoDefectSetUp(DialogPtr theDialog);	void 			GetCurrentDefectValues(DialogPtr theDialog);	void			Kill(void);	void			DislocationEnergy(void);	void 			CalculateBandH_Matrix(void);	void			CalculateSummedMHb(void);	void			CalculateElasticConstantsForDislocation(void);	void 			RootOfPolyUsingNewtonMethod(double QReal[7],double QImage[7]);	void 			InitCalcImage(void);	void			CalcIntensities(void);	void			SetResolution(void);};#endif