//ects:D.M. v2.0:Sources.Jim:Desktop.2.0:Defects 2:Defects 2 Headers:TwoDisObj.h#ifndef _TWO_DISLOC#define _TWO_DISLOC#pragma def_inherited onclass TwoDisObj:public OneDisObj{	public:	Index			*stackingFault_1;	Index			*stackingFault_2;	Index			*stackingFault_3;	Index			*burgersVector_2;	Index			*fault_Shear_1;	Index			*fault_Shear_2;	Index			*fault_Shear_3;		float			distanceToNextDis;	float			distanceToNextDis_E;		DislocIndex		*stackingFault_1s;	DislocIndex		*stackingFault_2s;	DislocIndex		*stackingFault_3s;	DislocIndex		*burgersVector_2s;	DislocIndex		*fault_Shear_1s;	DislocIndex		*fault_Shear_2s;	DislocIndex		*fault_Shear_3s;	Boolean			defectFlagsSet[8][4];	float			distanceToNextDiss[8];	float			distanceToNextDis_Es[8];			float			phaseShiftSF[3];	float			sinShiftSF[3];	float			cosShiftSF[3];		Boolean			defectFlags[4];	Boolean 		GetVectors(void);	Boolean 		DefineDislocation(void);	void 			DoDefectSetUp(DialogPtr theDialog);	void 			GetCurrentDefectValues(DialogPtr theDialog);	void			SetObjectWindowTitle(void);	void			DoClose				(void);	void 			CalcShift(double *shift,double delta_Y_Dir_Extinct,double EXTRA,double DIVISOR,double dotProd_Foil_N_Beam);	void 			ADDCN(double *EXTRA,double *DIVISOR);	void 			AdditionMatrixMults(double DCX[3][3]);		void 			HowieWhelanDeriv(void);		void 			CalculateMove(double *MOVE,double shift);	void 			AdditionalStartAndPositionValues(double EXTRA);	void 			AdditionalIterations(void);	void 			DoAddTwoDisCN(double VR[3][3],double UR[3][3],short j);	void 			StackingFaultShifts(void);	void 			DoAuxRead(void);	void 			DoAuxWrite(void);	void 			AddedOneDisCalc(void);	void 			AddedOneDis2(void);	void 			AddedOneDis3(void);		Boolean			ResetDefects			(short i);	void			InsertCurrentDefects	(void);	void			AddDefects				(DialogPtr theDialog,Boolean theFlag);	void			DrawFrameText			(Point thePoint);	double  DrawDislocationSchematic(Rect theRect,Index *lineDir,Index *burgerV,Boolean erase);	void  DislocationShift(double magnification,short *hor,short *ver);	void 	SetORToNewBase(short newCrystal); //Override	void	DislocDefSetUp(DialogPtr theDialog,ML_DislocSetPtr theParams);	Boolean DislocDefSwitch(DialogPtr theDialog,ML_DislocSetPtr theParams,short theSelect,Boolean *saveDta);	void	DislocDefRead(DialogPtr theDialog,ML_DislocSetPtr theParams,Boolean saveData);	void 	DoDefine(void);};#endif