//m:Desktop.2.0:Defects 2:Defects 2 Headers:OneDisObj.h#ifndef _ONE_DISLOC#define _ONE_DISLOC#define	PALETTE_MENU_1	177#include 	"DislocIndex.h"#include 	"DislocImageCond.h"#include	"ML_OneDis.h"#include "ML_OneDisDef.h"class OneDisObj:public SADObj{	public:	Index			*burgersVector;	Index			*lineDirection;			DislocImageCond	*pictID;	DislocIndex		*burgersVectors;	DislocIndex		*lineDirections;		DislocIndex		*g_Vectors;	DislocIndex		*theZoneAxes;	DislocIndex		*theRotationAxes;		float			**anomAbsorbCoeffs;	float			**rotationAngles;	float			**offLaueDistances;	short			**orTypes;		float			w_Off_Bragg;	float			normalized_Thickness;	float			anomAbsorbCoeff;	Boolean		anomFlag;	Boolean		redraw;		Boolean		macroFlag;//Moved the thickness macros to the SADObj	short			maxN_Beams;		float			true_Foil_Thick_Extinct;		Boolean			darkFieldFlag;	long			xCount;	long			yCount;	short			numberDefect_Sets;	short			number_Beams;		/* No Need to save the following variables, they are internally generated */		double			maxIntensity;	double			minIntensity;	double			grayGain;	double			grayOffset;		float	*TB;	float	*FX1;	float	*FX2;	float	*FX3;	float	*FX4;	float	*FY1;	float	*FY2;	float	*FY3;	float	*FY4;	double cos_Cry_Dis[3][3];	double	gVector_Cart[3];	double	proj_Beam[3];	double	proj_Foil_Norm_X[3];	short 	KOUNTF;	short 	N,luck;	double 	X,X1;	short 	MW;	short	MR;	short	iFlag;	double  *ptrCN1;	double	*ptrCN2;	double	*ptrCN3;	double	*ptrCN4;	double	*ptrCN5;	double	*ptrCN6;	double	*ptrCN7;	double	*ptrCN8;	double	*ptrCN9;	double	*ptrCN10;	double  *ptrCN11;	double	*ptrCN12;	double	*ptrCN13;	double	*ptrCN14;	double	*ptrCN15;	double	*ptrCN16;	double	*ptrCN17;	double	*ptrCN21;	double	*ptrCN22;	double	*ptrCN23;	double	*ptrCN24;	double	*ptrCN25;	double	*ptrCN26;	double	*ptrCN30;	double	*ptrCN29;	double  STARTA;	double	CN[31];	double	SURFAC;	double	TEMPY[9];	double	FINISH;	double	*ptrY1;	double	*ptrY2;	double	*ptrY3;	double	*ptrY4;	double	*ptrY5;	double	*ptrY6;	double	*ptrY7;	double	*ptrY8;		Boolean SKIP;	double	displacement_Norm;	double	*ptrD1;	double	*ptrD2;	double	*ptrD3;	double	*ptrD4;	double	*ptrD5;	double	*ptrD6;	double	*ptrD7;	double	*ptrD8;	double  howie_Whelan_Eq[8];	double	eightElements;	double	theSlice;	short	*addtionalFX;	short	KRASH;	double	eRROR;	double	Q;	double	D[9];	double	ANO;	double	ZR;	double	ZI;	double	C44;	double	rot_Elastic_Const[6][6];	double  p_Real[3];	double	p_Image[3] ;	double	AI[3][3];	double	AR[3][3];		double	eMReal[3][3];	double	eMImage[3][3];	double  dotProd_Foil_N_Beam;	double	delta_X_Dir_Extinct;	short	nEW;	double	H[3][3];	short	max_Deluge;		double 	 Q1;	double	Q2;	double	Q3;	double	Q4;	double	Q6;	double	Q15;	double	YT[8];	double	DT[8][3];	double	highError;	double	loError;	short 	lastX;	double	lastY;		short 	lastGray;	short 	NP[3];	short 	NQ[3];	short 	MM[3];	short 	NN[3];	short 	L1[6];	short 	L2[6];	short 	L3[3][3];			void			DoInit				(void);	void	 		DoDefine			(void);	void			DoMenu				(long theResult);	void			SetObjectWindowTitle(void);	void 			SetObjectMenu(void);	virtual Boolean			DefineDislocation	(void);	void			MyCalculate			(void);	void			DoClose				(void);	void			ElasticField		(void);	virtual void 			HowieWhelanDeriv	(void);	void 			RungeKuttaIntegration8Eq(void);	void 			GrayScale			(short theX,short theY,double intensity);	void 			SetupPointers		(void);	void 			ColorTest			(void);	virtual Boolean GetVectors			(void);	void 			SetGrayConstants	(void);	void			SetPict(Boolean theFlag);	void 			DoPictDraw			(void);	void 			SetIntensities		(void);			float			AnomalGuess			(void);	void 			DrawTheText			(void);		void			DefineSetUp			(DialogPtr theDialog);		void 			DrawALine			(double *m,short h,short v);	Boolean 		SetPlotParameters	(void);		virtual void 	CalculateMove			(double *MOVE,double shift);	virtual void 	CalcShift				(double *shift,double delta_Y_Dir_Extinct,double EXTRA,double DIVISOR,double dotProd_Foil_N_Beam);	virtual void 	ADDCN					(double *EXTRA,double *DIVISOR);	virtual void 	AdditionalStartAndPositionValues(double EXTRA);	virtual void 	AdditionalIterations	(void);	virtual  void 	DoAddTwoDisCN			(double VR[3][3],double UR[3][3],short j);	virtual void 	AdditionMatrixMults		(double DCX[3][3]);	virtual void  	StackingFaultShifts		(void);	void 			DoAuxRead				(void);	void 			DoAuxWrite				(void);	virtual void 	AddedOneDisCalc			(void);	virtual void 	AddedOneDis2			(void);	virtual void 	AddedOneDis3			(void);	void			ThicknessMacro			(void);	void			RationalizeData			(void);	void 			AddBeams				(DialogPtr theDialog,Boolean theFlag);	void			DoMacros				(void);	void			SetPictFrame			(Boolean newRow);	Boolean		ResetBeam				(short beamNumber);	virtual void 			InsertCurrentBeam		(void);	virtual void			GetCurrentBeamValues	(DialogPtr theDialog);	virtual void	DoDefectSetUp			(DialogPtr theDialog);	Boolean				ResetDefects			(short i);	virtual void	InsertCurrentDefects	(void);	virtual void	AddDefects				(DialogPtr theDialog,Boolean theFlag);	virtual void	GetCurrentDefectValues	(DialogPtr theDialog);	virtual void	DrawFrameText			(Point thePoint);	PicHandle			DisplayDefectPict		(Rect *theRect,short horiz,short vert);	void			DoImagePopUp			(PictObj *thePicture/*,Point thePoint*/);	Boolean		DoContent				(Point thePoint);	void 			InitCalc				(void);	void 			RootOfPolyUsingNewtonMethod(double QReal[7],double QImage[7]);	void 			SetImageParameters(double *k_D,double *I_D,short *lastX,long *twoXCount,long *twoYCount);	void 			CalculateThickness(void);	void			CheckBeamsMem(short n);	virtual double 			DrawDislocationSchematic(Rect theRect,Index *lineDir,Index *burgerV,Boolean erase);	void  DrawDislocation(void);	void	CalculateIntensityMap(void);	void FastPictDraw(void);	 //Override //Overridevoid	SetFoilPtrs(Boolean thePtr1,short thePtr2,short thePtr3);Boolean GetFoilPtrs(Boolean *thePtr1,short *thePtr2,short *thePtr3);	void SetORToNewBase(short newCrystal); //Override	void DoSetUp(void);	void SetDefineObjDE(DialogPtr theDialog,ML_OneDisParamsPtr theParams);	Boolean DefineSwitchDE(DialogPtr theDialog,ML_OneDisParamsPtr thePtr,short theSelect,Boolean *saveData);	void  ReadDefineDialogDE(DialogPtr theDialog,Boolean saveData);	virtual void	DislocDefSetUp(DialogPtr theDialog,ML_DislocSetPtr theParams);	virtual Boolean DislocDefSwitch(DialogPtr theDialog,ML_DislocSetPtr theParams,short theSelect,Boolean *saveDta);	virtual void	DislocDefRead(DialogPtr theDialog,ML_DislocSetPtr theParams,Boolean saveData);};#endif