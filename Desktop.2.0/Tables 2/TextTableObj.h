//ects:D.M. v2.0:Sources.Jim:Desktop.2.0:Tables 2:TextTableObj.h#ifndef		_TEXT_TABLE_OBJ#define	_TEXT_TABLE_OBJ#include 	"a_DiffractObject.h"#include 	"a_ControlObj.h"#include	"MenuDefs.h"#include	"PointObj.h"#include	"a_D_Space.h"Ptr AllocTextTableObj(void);Ptr AllocTextTable3DObj(void);class	TextTableObj3D;class	TextTableObj:public D_Spacing_Table{	public:	DiffractObject		*owner;	Boolean				initFlag;	short				displayType;	void				DoInit(void);	void				DoClose(void);	Boolean				DoContent(Point);	void				DoIdle(void);				/*	Idle Routine					*/	void				DoMenu(long);	void				DoKey(char theKey);	void 				SetObjectMenu(void);	void				DrawTheText(void);	void 				DisplayList(void);	void				ShowGraph(void);	void				HideGraph(void);	void 				SetOwner(DiffractObject* theOwner);	void				ConvertPointsToSpots(PointObj* thePoints);	void				DoDefine(void);	void 				DetermineHKLValues(void);	void				MyCalculate(void);	Boolean				MarkSpotSet(Boolean *flags);	void				ConvertXYtoXYZ(double *x,double *y,double *z);	void				ConvertXYtoXYZ_List(double *x,double *y,double *z);	virtual void				CalculateReducedUnitCell(void);	void		DoDefineSetUp(void);};class	TextTableObj3D:public TextTableObj{	char	dummy;public://void		ConvertXYtoXYZ_List(double *x,double *y,double *z);void		FillValuesFromTables(Boolean *flags);void		FitUnitCellToData(void);void		CalculateReducedUnitCell(void);};	#endif