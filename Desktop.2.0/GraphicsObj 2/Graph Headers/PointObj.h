//m:Desktop.2.0:GraphicsObj 2:Graph Headers:PointObj.h#ifndef _POINTOBJ#define _POINTOBJ class PointObj:public TextObject{	public:	Rect			ptRect;	Point			objPoint;	float			hor;	float			ver;		void			FrameText		(void);	void			DoDefine		(void);	short			PtInObject		(Point thePoint);	Boolean 		RelocateText	(Point delPoint);	void 			InitText			(Point thePoint,void* owner,short theType,Boolean dirFlag,Crystal *aCrystal);	short 			SetMatrixValues	(short startValue,short max,short n,float **a,									float **b,Boolean flagX,short theType,PointObj *centerPt);	short 			SetInverseMatrixValues	(short startValue,short max,short n,float **a,											float **b,Boolean flagX,short theType,PointObj *centerPt);	void			JustifyObject	(void);	void			EraseObject		(void);	void			DrawText		(void);	void			FindPeakCenter	(void);	void			CenterPeak		(void);	void			CenterPeaks		(void);	Handle  		FindMaxIntensity(double *maxIntensity);	double 		FindPerimeterIntensity(void);	void			InsetPointRect	(short n,short k);	short 			FindPerimeterIntensities(Handle *intensities,Handle *thePoints);	TextObject* 	Add				(Point thePoint,void* owner,short theType);	PointObj*		CountObjects(short *n,PointObj *centerObj,short theType);	void 			InsertData		(SpotInfoPtr theSpots,PointObj* centerPoint,short theTye);	void			SetType			(short aType);	void			GetAllValues	(PointObj *centerPt);		void			CalcXYValues(double scaleFactor,PointObj *centerPt);	void			SetOrigin		(float x,float y,float hor,float ver);	void			SetXYToRecipA	(void);	void 			SetXToHKLConvertToXY(SpotInfoPtr theSpots,short data_Count,short theType);	void 			DoCleanUp(void);	void			SetPointRectDiameters(short theSize);	Point 			AdjustCenter(double *peakIntensity);	void MovePointTo(Point thePoint);	};#endif