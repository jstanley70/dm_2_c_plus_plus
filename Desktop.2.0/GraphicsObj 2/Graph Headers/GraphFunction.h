//ces.Jim:Desktop.2.0:GraphicsObj 2:Graph Headers:GraphFunction.h#ifndef _GRAPH_FUNCTION#define _GRAPH_FUNCTIONclass	GraphSpots;class IconObj;class	GraphFunction{	public:	Handle	xData;	Handle	yData;		short		graphType;	short		objectType;	double	minX;	double	minY;	double	maxX;	double	maxY;	double	pMinX;	double	pMinY;	double	pMaxX;	double	pMaxY;	double	scaleX;	double	scaleY;	double	normalizedBy;	short		noPtsX;	short		noPtsY;	short		originX;	short		originY;	short		numXTicks;	short		numYTicks;	char		**xTitle;	char		**yTitle;	char 		**graphTitle;	Boolean	plotGraph;	Boolean			doubleClick;	Boolean			shrunk;	Boolean			labelOn;	Boolean			hidden;	Boolean			grow;	Boolean			active;		RGBColor	color;	Point			grpTLoc;	Point			xTLoc;	Point			yTLoc;		Boolean			selected;	Rect				moveRect;	Rect				activityBox;	Rect				growBox;		Rect			iconBox;	PopUpMenu 		*fileMenu;	PopUpMenu 		*spectraMenu;	PopUpMenu		*titleMenu;	Rect			fileMBox;	Rect			killBox;	Rect			resizeBox;	Rect			frame;	Rect			graphRect;	IconObj		*exIconV;	IconObj		*conIconV;	IconObj		*resetIconV;	IconObj		*resetIcon;	IconObj		*exIconH;	IconObj		*conIconH;	GraphFunction	*next;	GraphFunction	*owner;	Boolean		printing;	virtual void	SetValues(Handle xD,Handle yD);	void  				DoPrint(void);	virtual void	AdditionalPointers(void);	virtual void		DoInit(Rect theRect,RGBColor theColor,Boolean addMenu,Boolean grow);	virtual	void	PlotGraph(void);	void 	DoClose			(GraphFunction *theGraph);	GraphFunction* 	Kill			(void);	virtual void	GetMinMax(Handle theData,double *minV,double *maxV,short noPts);		void	SetFrame(Rect theRect);	void	InitGraphSpace(Rect theRect);	void	DrawFrame(void);	void	SetPlotScales(void);	short	DrawTicksXAxis(short *powerOf10);	short 	DrawTicksYAxis(short *powerOf10);	short	DrawTextAtPointVer(char *theText,short theX,short theY);	short 	DrawTextAtPointHor(char *theText,short theX,short theY);	void 	DrawTextVertical(char *theText,short theX,short theY);	void 	SetTitle(char *theText,Handle *titleHdn);	void 	SetTitleY(char *theText);	void 	SetTitleX(char *theText);	void	DrawTitleGraph(void);	void	 DrawTitleX(short j);	void	 DrawTitleY(short j);			void 	SetToOwner(void);		GraphFunction*  AddGraph(GraphFunction *theOwner,GraphFunction *nextGraph,Rect theRect);	void 	SetTitleGraph(char *theText);	GraphFunction*	FindGraph(GraphFunction *compareGraph,short *num);	GraphFunction*	FindGraphByNum(short num,short i);	virtual	GraphFunction* 	GetDerivative(void);	void 	ResetPlotMinMax(void);	Point	DetermineOrigin(void);	void	GraphType(short theX,short theY);	void	XYValue(Point thePoint,double *x,double *y);	void	ZoomPlot(Boolean flag,Point thePoint);	Ptr 	ConvertData(Ptr thePtr,long size);	Boolean	OpenFileText(void);	void	Normalize(Handle theData,double maxValue,short num);	void 	SetColor(void);	void  	DefinePlot(void);	void	DrawGraphBox(void);	void	AllMinMaxY(double *min,double *max);	void	NormalizeToOwner(GraphFunction *theOwner);	void 	DrawSingleValue(double lineEV,double intensity);	Ptr  	ConvertDataLines(Ptr thePtr,long size);	void	SetUpData(char* theText);	GraphFunction* 	MultiplyGraphs(GraphFunction *theGraph);	GraphFunction* 	DivideGraphs(GraphFunction *theGraph);	GraphFunction* 	FFTGraph(short type);	GraphFunction* 	GetPowerSpectra(void);	GraphFunction*  MakeTopHat(double start/*for complex spectra * 2 					actual value*/,double stop/*for complex spectra * 2 					actual value*/,long noPts,double minimum,double maximum);	void  DoTrack(Point movement,short command);	GraphFunction*  DoSelect(Point startPoint);	void  DoMove(Point startPoint);	void  DoIdle(void);	void 			ClearSelects(void);	Boolean 		DoContent(Point thePoint);	void  			DoDblClick  (Point thePoint);	void 				DoMenu(Point thePoint);	virtual Boolean					SaveText(void);	GraphFunction* 	StdFFTGraph(short type);	GraphFunction* 	MultiplyRGraphs(GraphFunction *theGraph);	GraphFunction* 	DivideRGraphs(GraphFunction *theGraph);	GraphFunction* 	CloseOne			(GraphFunction *graph,GraphFunction *newPrev,GraphFunction *home);	void						MoveFrameBy(Point thePoint);	void 						CleanOwner(GraphFunction *prevOwner,GraphFunction *newOwner);	GraphFunction*  GetSelected(void);	void						DoSpectrumDialogBox(void);	void						SpectrumMenu(short theItem);	Boolean 				GrowFrame(Point thePoint);	GraphFunction* 	GetActive(void);	short GetDataSize(void);	void SetDescendantTitle(char *theText);	void PlotXvsY(void);	void	DoWrite(void);	void		DoRead(GraphFunction *startGraph);	GraphFunction* 	GetIntegral(void);	Boolean					SeekNegatives(GraphFunction *test);};#endif