#ifndef	__ML_CRYSTAL__		#define	__ML_CRYSTAL__		#include "ML_Multilog.h"	#include "ITCCrystalDef.h"	#include "Diffract_INCs.h"/*	enum {		DO_MENU	= -2,		ML_DLOG_OK	= 1,		//	1		ML_DLOG_CANCEL,			//	2		SET_NUM_ATOMS,			//	3		GRAB_CRYSTAL,			//	4		SET_DEFAULT,			//	5		A_PRAM,					//	6		B_PRAM,					//	7		C_PRAM,					//	8		ALPHA_PRAM,				//	9		BETA_PRAM,				//	10		GAMMA_PRAM,				//	11		FILE_MENU_POP,			//	12		LATTICE_TYPE,			//	13		THE_LIST_RECT,			//	14		THE_LIST_DATA,			//	15		THE_CHECK_BOX,			//	16		THE_SCROLL_BARS,		//	17		LIST_TITLE_BAR,			//	18		LATTICE_PARM_LABEL,		//	19		OLD_ANGLE_LABELS,		//	20		A_B_C_LABEL,			//	21		UNITS_LABEL,			//	22		GAMMA_PICT,				//	23		BETA_PICT,				//	24		ALPHA_PICT,				//	25		FILE_MENU_LABEL,		//	26		CRYSTAL_FAMILY_LABEL,	//	27		SET_COLOR,				//	28		ADD_WYCKOFF,			//	29		REFERENCES,				//	30		R_TO_T					//	31	};*/	enum{		CRYS_OPEN = 1,		CRYS_SAVE,		CRYS_PAGE = 5,		CRYS_PRINT,		CRYS_CLOSE = 8,		CRYS_SAVE_AS = 124	};	enum {			ATOM_NUMBER,		X_LOC,		Y_LOC,		Z_LOC,		ELEMENT,		DW_FACTOR		};		typedef struct ML_CrysParams{			short			uniqueMenuID;			MenuHandle 		saveAsMenu;			ListHandle		theAtomList;			RGBColor		thisColor;			Crystal*		theOwner;			Crystal*		originalOwner;			PopUpMenu*  	fileMenu;			PopUpMenu*		popUpMenu;			AtomHnd			theAtoms;			short			latticeType;			short			atom_Count;			UnitCell		uc;			Boolean			changed;		}ML_CrysParams,*ML_CrysParamsPtr;		void		ML_DoCrystalSetup(Ptr owner,DialogPtr theDialog,Ptr	*paramBlock);	void		ML_DoCrystalHit(Ptr	owner,DialogPtr theDialog, short theSelect,	Ptr	paramBlock);	void		ML_DoCrystalRead(Ptr owner,DialogPtr theDialog,Ptr	paramBlock,Boolean saveData);		void 		ML_CleanTheButton(DialogPtr theDialog,short lattice_Type);	void		ML_DisplayCrystalName(DialogPtr	theDialog, short	idNum);	void		ML_DrawBoxes(DialogPtr	theDialog);	void		ML_InitAtomList(DialogPtr theDialog,ML_CrysParamsPtr theParms);	void		ML_ListAtoms(Crystal* theOwner,ListHandle theAtomList);	void		ML_KillAtomList(ML_CrysParamsPtr theParms);	void		ML_SetUnitCell(Crystal* theOwner,DialogPtr	theDialog);	void		ML_ResetDialogBox(DialogPtr theDialog,short lattice_Type,ML_CrysParamsPtr theParms);	void		ML_ReadCrystal(Crystal* theOwner,DialogPtr theDialog,ML_CrysParamsPtr	theMLParms);	void		ML_DoCellUpdate(Cell theCell,DialogPtr	theDialog,ML_CrysParamsPtr	theMLParms);	void		ML_DoMenu(DialogPtr theDialog,ML_CrysParamsPtr	theMLParms,long	theResult);#endif